<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head>
<title>Pure CSS Scrollable Table with Fixed Header</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
<meta http-equiv="language" content="en-us" />
<script type="text/javascript">
    <!--
    /* http://www.alistapart.com/articles/zebratables/ */
    function removeClassName (elem, className) {
        elem.className = elem.className.replace(className, "").trim();
    }

    function addCSSClass (elem, className) {
        removeClassName (elem, className);
        elem.className = (elem.className + " " + className).trim();
    }

    String.prototype.trim = function() {
        return this.replace( /^\s+|\s+$/, "" );
    }

    function stripedTable() {
        if (document.getElementById && document.getElementsByTagName) {
            var allTables = document.getElementsByTagName('table');
            if (!allTables) { return; }

            for (var i = 0; i < allTables.length; i++) {
                if (allTables[i].className.match(/[\w\s ]*scrollTable[\w\s ]*/)) {
                    var trs = allTables[i].getElementsByTagName("tr");
                    for (var j = 0; j < trs.length; j++) {
                        removeClassName(trs[j], 'alternateRow');
                        addCSSClass(trs[j], 'normalRow');
                    }
                    for (var k = 0; k < trs.length; k += 2) {
                        removeClassName(trs[k], 'normalRow');
                        addCSSClass(trs[k], 'alternateRow');
                    }
                }
            }
        }
    }

    window.onload = function() { stripedTable(); }
    -->
</script>
<style type="text/css">
    <!--
        /* Terence Ordona, portal[AT]imaputz[DOT]com         */
        /* http://creativecommons.org/licenses/by-sa/2.0/    */

        /* begin some basic styling here                     */
    body {
        background: #FFF;
        color: #000;
        font: normal normal 12px Verdana, Geneva, Arial, Helvetica, sans-serif;
        margin: 10px;
        padding: 0
    }

    table, td, a {
        color: #000;
        font: normal normal 12px Verdana, Geneva, Arial, Helvetica, sans-serif

    }

    h1 {
        font: normal normal 18px Verdana, Geneva, Arial, Helvetica, sans-serif;
        margin: 0 0 5px 0
    }

    h2 {
        font: normal normal 16px Verdana, Geneva, Arial, Helvetica, sans-serif;
        margin: 0 0 5px 0
    }

    h3 {
        font: normal normal 13px Verdana, Geneva, Arial, Helvetica, sans-serif;
        color: rgba(0, 247, 0, 0.85);
        margin: 0 0 15px 0
    }
        /* end basic styling                                 */

        /* define height and width of scrollable area. Add 16px to width for scrollbar          */
    div.tableContainer {
        clear: both;
        border: 1px solid #963;
        height: 800px;
        overflow: auto;
        width:1580px
    }
    /* Reset overflow value to hidden for all non-IE browsers. */
    html>body div.tableContainer {
        overflow: hidden;
        width: 1580px
    }

    /* define width of table. IE browsers only                 */
    div.tableContainer table {
        float: left;
        width: 1580px
    }

    /* define width of table. Add 16px to width for scrollbar.           */
    /* All other non-IE browsers.                                        */
    html>body div.tableContainer table {
        width: 1580px
    }
        /* set table header to a fixed position. WinIE 6.x only                                       */
        /* In WinIE 6.x, any element with a position property set to relative and is a child of       */
        /* an element that has an overflow property set, the relative value translates into fixed.    */
        /* Ex: parent element DIV with a class of tableContainer has an overflow property set to auto */
    thead.fixedHeader tr {
        position: relative;
    }

        /* set THEAD element to have block level attributes. All other non-IE browsers            */
        /* this enables overflow to work on TBODY element. All other non-IE, non-Mozilla browsers */
    html>body thead.fixedHeader tr {
        display: block
    }

        /* make the TH elements pretty */
    thead.fixedHeader th {
        background: #44bb38;
        border-left: 1px solid #EB8;
        border-right: 1px solid #B74;
        border-top: 1px solid #EB8;
        font-weight: normal;
        padding: 4px 3px;
        text-align: left
    }

        /* make the A elements pretty. makes for nice clickable headers                */
    thead.fixedHeader a, thead.fixedHeader a:link, thead.fixedHeader a:visited {
        color: #FFF;
        display: block;
        text-decoration: none;
        width: 100%
    }

        /* make the A elements pretty. makes for nice clickable headers                */
        /* WARNING: swapping the background on hover may cause problems in WinIE 6.x   */
    thead.fixedHeader a:hover {
        color: #FFF;
        display: block;
        text-decoration: underline;
        width: 100%
    }

        /* define the table content to be scrollable                                              */
        /* set TBODY element to have block level attributes. All other non-IE browsers            */
        /* this enables overflow to work on TBODY element. All other non-IE, non-Mozilla browsers */
        /* induced side effect is that child TDs no longer accept width: auto                     */
    html>body tbody.scrollContent {
        display: block;
        height: 700px;
        overflow: auto;
        width: 100%
    }

        /* make TD elements pretty. Provide alternating classes for striping the table */
        /* http://www.alistapart.com/articles/zebratables/                             */
    tbody.scrollContent td, tbody.scrollContent tr.normalRow td {
        border-bottom: 1px solid #DDD;
        border-left: none;
        border-right: 1px solid #CCC;
        border-top: 1px solid #DDD;
        padding: 2px 3px 3px 4px ;
    }

    tbody.scrollContent tr.alternateRow tr {
        border-bottom: 1px solid #DDD;
        border-left: none;
        border-right: 1px solid #CCC;
        border-top: 1px solid #DDD;
        padding: 2px 3px 3px 4px;


    }

    /* define width of TH elements: 1st, 2nd, and 3rd respectively.          */
    /* Add 16px to last TH for scrollbar padding. All other non-IE browsers. */
    /* http://www.w3.org/TR/REC-CSS2/selector.html#adjacent-selectors        */


   /* html>body thead.fixedHeader th  {
        width: 116px
    }   */

    tbody.scrollContent tr.alternateRow tr:hover  {
       color: #ffff99;
        background: red;
    }


        /* define width of TD elements: 1st, 2nd, and 3rd respectively.          */
        /* All other non-IE browsers.                                            */
        /* http://www.w3.org/TR/REC-CSS2/selector.html#adjacent-selectors        */


    /*html>body tbody.scrollContent td  {
        width: 111px
    }  */


    th{ width:100px;}
    th.col2 { width: 150px;}
    th.col10 { width: 125px;}
    th.col11 { width: 128px;}
    th.col12 { width: 125px;} /*-- firefox th.col12 { width: 122px;} */
</style>
</head><body>

<% form_for :pool_graded_ps_summary, :url => { :action => 'save_pool_graded_ps_bins', :id => @pool_graded_ps_summary.id } do |f|%>
<% if @pool_graded_ps_bins.empty? %>
    No bins for this  pool_graded_ps_summary
<% else %>
    <p>MAF Lot Number: <b><%= @pool_graded_ps_summary.maf_lot_number %></b> </p>
    <p>MAF Tipped Quantity: <b><%= @pool_graded_ps_summary.maf_tipped_lot_qty %></b> </p>
    <p>MAF Total Lot Weight: <b><%= sprintf('%0.2f',@pool_graded_ps_summary.maf_total_lot_weight) %></b> </p>
    <p>RMT Sample Bin Weight: <b><%= sprintf('%0.2f',@pool_graded_ps_summary.rmt_bin_weight) %></b> </p>
<div><br/></div>

<div id="tableContainer" class="tableContainer">
<table border="0" cellpadding="0" cellspacing="0" width="1580px" class="scrollTable">
<tr><%= render :partial => 'ps_bin_action' %></tr>
<thead class="fixedHeader">
<tr >
  <th >&nbsp;</th>
  <th class="col2">MAF<br />Article</th>
  <th>MAF<br /> Class</th>
  <th>Graded<br /> Class</th>
  <th>MAF<br /> Colour</th>
  <th>Graded<br />Colour</th>
  <th>MAF_Article<br />Count</th>
  <th>MAF<br />Count</th>
  <th>Graded<br />Count</th>
  <th class="col10">MAF<br />Weight</th>
  <th class="col11">Graded<br />Weight</th>
  <th class="col12">Weight<br />Adjusted<br /> + </th>
  <th class="col12">Weight<br />Adjusted<br /> - </th>

</tr>
</thead>
<tbody class="scrollContent" >
<tr>
  <%= render :partial => 'ps_bin', :collection => @pool_graded_ps_bins %>
</tr>
<tr >
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td align="left" colspan="2"><strong>Totals</strong></td>
  <td align="left"><strong><%= text_field_tag "total_maf_weight", sprintf('%0.2f', @pool_graded_ps_bins.sum{|p| p.maf_weight }), :size => 8 ,:class => 'totals',:disabled=>true %></strong></td>
  <td align="left"><strong><% if !@pool_graded_ps_bins.empty? && @pool_graded_ps_bins[0].total_calculated_weight %><%= text_field_tag "total_graded_weight",sprintf('%0.2f',@pool_graded_ps_bins[0].total_calculated_weight), :size => 8 ,:class => 'totals',:disabled=>true %><% else %><%= text_field_tag "total_graded_weight",sprintf('%0.2f',@pool_graded_ps_bins.sum{|p| p.maf_weight } ), :size => 8 ,:class => 'totals',:disabled=>true %><% end %></strong></td>
  <td align="left"><strong><%= text_field_tag "total_adjusted_weight_plus",sprintf('%0.2f',@pool_graded_ps_bins.sum{|p| p.weight_adjusted_plus } ), :size => 8 ,:class => 'totals',:disabled=>true %></strong></td></strong>
  <td align="left"><strong><%= text_field_tag "total_adjusted_weight_minus",sprintf('%0.2f',@pool_graded_ps_bins.sum{|p| p.weight_adjusted_minus } ), :size => 8 ,:class => 'totals',:disabled=>true %></strong></td>
</tr>
<tr >
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td align="left" colspan="2"><strong>Check</strong></td>
  <td>&nbsp;</td>
  <td align="left"><strong><% if !@pool_graded_ps_bins.empty? && @pool_graded_ps_bins[0].round_check %><%= text_field_tag "round_check",sprintf('%0.2f',@pool_graded_ps_bins[0].round_check), :size => 8 ,:class => 'numeric',:disabled=>true %><% else %><%= text_field_tag "round_check",sprintf('%0.2f',0.0  ), :size => 6 ,:class => 'numeric',:disabled=>true %><% end %></strong></td>  <td>&nbsp;</td>
   <td>&nbsp;</td>
</tr>
<tr>
  <td colspan="13">&nbsp;</td>
</tr>

<tr class="<%= cycle('rowodd','roweven') %> ">
  <%#= render :partial => 'pesage_record', :collection => @pesage_record %>
</tr>
<!--<tr class="<%= cycle('rowodd','roweven') %> ">
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td align="left" colspan="2">Total waste</td>
  <td>&nbsp;</td>
  <td align="left"><strong><%# if !@pool_graded_ps_bins.empty? && @pool_graded_ps_bins[0].waste_weight %><#%= text_field_tag "waste",sprintf('%0.2f',@pool_graded_ps_bins[0].waste_weight ), :size => 8 ,:class => 'totals',:disabled=>true %><%# else %><#%  end %></strong></td>
   <td>&nbsp;</td>
  <td>&nbsp;</td>
</tr>-->
<tr class="<%= cycle('rowodd','roweven') %> ">
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td align="left" ><strong><% if !@pool_graded_ps_bins.empty? && @pool_graded_ps_bins[0].total_graded_weight_plus_round_check_plus_pesage_maf_weight_plus_waste %><%= text_field_tag "total_graded_weight_plus_round_check_plus_pesage_maf_weight_plus_waste",sprintf('%0.2f',@pool_graded_ps_bins[0].total_graded_weight_plus_round_check_plus_pesage_maf_weight_plus_waste ), :size => 8 ,:class => 'totals',:disabled=>true %><% else %><%  end %></strong></td>

</tr>
<tr>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td align="left" colspan="2">RMT Sample Bin Weight</td>
  <td>&nbsp;</td>
  <td align="left"><strong><%= text_field_tag "waste",sprintf('%0.2f',@pool_graded_ps_summary.rmt_bin_weight ),:size => 8 ,:class => 'totals',:disabled=>true %></strong></td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
</tr>
<tr>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td align="left" colspan="2"><strong>Check</strong></td>
  <td>&nbsp;</td>
  <td align="left"><strong><% if !@pool_graded_ps_bins.empty? && @pool_graded_ps_bins[0].round_check_2 %><%= text_field_tag "round_check_2",sprintf('%0.2f',@pool_graded_ps_bins[0].round_check_2), :size => 8 ,:class => 'numeric',:disabled=>true %><% else %><%= text_field_tag "round_check_2",sprintf('%0.2f',0.0  ), :size => 6 ,:class => 'numeric',:disabled=>true %><% end %></strong></td>  <td>&nbsp;</td>
  <td>&nbsp;</td>
  <td>&nbsp;</td>
</tr>
</tbody>
</table>
</div>
    <button>Save</button>
</body></html>
<% end %>
<% end %>